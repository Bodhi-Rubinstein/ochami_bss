name: Run CT Tests
on: [push, pull_request, workflow_dispatch]
jobs:
  run_ct_test:
    name: Run CT Tests
    runs-on: ubuntu-latest
    env:
      IMAGES_UNDER_TEST: |
        [
          {
            "ImageName": "cray-bss",
            "DockerComposeServices": [
              "cray-bss"
            ]
          }
        ]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      
      - name: Checkout hms-simulation-environment
        uses: actions/checkout@v2
        with:
          # TODO check out a "stable" or "v1" tag, or somehow have it match the pointed branch that this workflow was referenced from
          fetch-depth: 0
          path: hms-simulation-environment
          repository: Cray-HPE/hms-simulation-environment

      - name: Build images under test
        shell: bash
        run: |
          make image

      - name: Update docker-compose file with images under test
        shell: python
        run: |
          import os
          import sys
          import json
          import subprocess

          # Read in version from .version
          version = None
          with open('.version') as f:
            version = f.readline().strip()

          print('Version: ', version)

          # Read in IMAGES_UNDER_TEST from the environment
          images_under_test = json.loads(os.environ['IMAGES_UNDER_TEST'])

          # Update docker-compose file for each service
          for image_under_test in images_under_test:
            for service in image_under_test["DockerComposeServices"]:
              cmd = ['yq', '-i', 'e', f'.services.{service}.image = "{image_under_test["ImageName"]}:{version}"', './hms-simulation-environment/docker-compose.yaml']

              print(f'Running command: {cmd}')
              result = subprocess.run(cmd)
              if result.returncode != 0:
                  sys.exit(1)

      - name: Standup simulation environment
        shell: bash
        run: |
          set -ex
          cd hms-simulation-environment

          # For debugging output the modified docker-compose compose file
          echo "Updated docker-compose.yaml"
          cat docker-compose.yaml

          # Setup python virtual environment
          ./setup_venv.sh
          . ./venv/bin/activate
          ./run.py configs/sls/small_mountain.json

      - name: Run smoke tests
        run: ./runSmokeTestsWithSimulator.sh

      - name: Load simulation for tavern tests
        run: ./runTavernTestsLoadSimulator.sh
      
      - name: Run tavern tests
        run: ./runTavernTestsWithSimulator.sh