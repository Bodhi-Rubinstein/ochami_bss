---
test_name: bssAPIcloudinit

stages:
- name: Remove any test HSM EthernetInterfaces for the CT Test container if they exist
  request:
    url: "{hsm_base_url}/hsm/v2/Inventory/EthernetInterfaces/0efffffffffe"
    method: DELETE
    verify: !bool "{verify}"

- name: Remove any test HSM State Components if they exist
  request:
    url: "{hsm_base_url}/hsm/v2/State/Components/x9999c0s1b0n0"
    method: DELETE
    verify: !bool "{verify}"

# Please note that this stage is a hack to retrieve and save the IP address of this container into 
# a variable. Perhaps a plugin might be better here.
- name: Retrieve test container IP address
  request:
    # The endpoint that we hit doesn't really matter, just 
    url: "{bss_base_url}/boot/v1/service/status"
    method: GET
    verify: !bool "{verify}"
  response:
    save:
      $ext:
        function: bss_test_utils:save_ip_address_of_test_container

- name: Create test HSM EthernetInterfaces for the CT Test container
  request:
    url: "{hsm_base_url}/hsm/v2/Inventory/EthernetInterfaces"
    method: POST
    verify: !bool "{verify}"
    json:
      MACAddress: "0e:ff:ff:ff:ff:fe"
      ComponentID: "x9999c0s1b0n0"
      Description: "Created by BSS CT Tavern Tests"
      IPAddresses:
        - IPAddress: "{test_container_ip_address}"

  response:
    status_code: 201

- name: Create test Component in HSM State Components
  request:
    url: "{hsm_base_url}/hsm/v2/State/Components"
    method: POST
    verify: !bool "{verify}"
    json:
      Components:
      - ID: x9999c0s1b0n0
        Class: River
        State: "Off"
        Role: "Management"
        SubRole: "Worker"
  response:
    status_code: 204

- name: Create or update Bootparameteter for node with cloud-init data
  request:
    url: "{bss_base_url}/boot/v1/bootparameters"
    method: PUT
    verify: !bool "{verify}"
    json:
      hosts:
      - x9999c0s1b0n0
      params: console=tty0
      kernel: s3://boot-images/00000000-0000-0000-0000-000000000000/kernel
      initrd: s3://boot-images/00000000-0000-0000-0000-000000000000/initrd
      cloud-init:
        meta-data:
          meta-data-key: "foo"
        user-data:
          user-data-key: "bar"
  response:
    status_code: 200

- name: Perform POST against /hosts to force a sync with HSM
  request:
    url: "{bss_base_url}/boot/v1/hosts"
    method: POST
    verify: !bool "{verify}"
  response:
    status_code: 204

    # TODO maybe add a delay here


# /src/app $ curl http://cray-bss:27778/user-data
# #cloud-config
# foo: bar

# THIS failed once
- name: Query for cloud-init user-data for the node
  max_retries: 5
  delay_after: 1
  request:
    url: "{bss_base_url}/user-data"
    method: GET
    verify: !bool "{verify}"
  response:
    status_code: 200
    headers:
      content-type: text/yaml

    # The Response is yaml and not json. Tavern currently support yaml response, so as a hack we can 
    # regular expressions to validate the output.
    #
    # A response similar to following is expected:
    #
    # #cloud-config
    # local-hostname: x9999c0s1b0n0
    # user-data-key: bar
    verify_response_with:
      - function: bss_test_utils:better_validate_regex
        extra_kwargs:
          expression: "#cloud-config"
      - function: bss_test_utils:validate_yaml_simple
        extra_kwargs:
          expected:
            local-hostname: x9999c0s1b0n0
            user-data-key: bar

- name: Query for cloud-init meta-data for node
  request:
    url: "{bss_base_url}/meta-data"
    method: GET
    verify: !bool "{verify}"
  response:
    status_code: 200
    verify_response_with:
      function: tavern.testutils.helpers:validate_pykwalify
      extra_kwargs:
        schema:
          type: map
          mapping:
            Global:
              type: map
              allowempty: true
            instance-id:
              type: str
              pattern: "^x9999c0s1b0n0"
            local-hostname:
              type: str
              enum:
              - x9999c0s1b0n0
            meta-data-key:
              type: str
              enum:
              - foo
            shasta-type:
              type: str
              enum:
              - Management
            shasta-role:
              type: str
              enum:
              - Worker

# TODO Add this to the swagger, as it it missing
- name: Query cloud-init meta-data for a particular key
  request:
    url: "{bss_base_url}/meta-data"
    method: GET
    verify: !bool "{verify}"
    params:
      key: meta-data-key
  response:
    status_code: 200
    verify_response_with:
      function: tavern.testutils.helpers:validate_pykwalify
      extra_kwargs:
        schema:
          type: str
          enum:
          - foo

- name: "Phone home back to cloud-init with POST to /phone-home"
  request:
    url: "{bss_base_url}/phone-home"
    method: POST
    verify: !bool "{verify}"
    json:
      pub_key_dsa: "pub_key_dsa_value"
      pub_key_rsa: "pub_key_rsa_value"
      pub_key_ecdsa: "pub_key_ecdsa_value"
      pub_key_ed25519: "pub_key_ed25519_value"
      instance_id: "instance_id_value"
      hostname: "hostname_value"
      fqdn: "fqdn_value"

  response:
    status_code: 200
    verify_response_with:
      function: tavern.testutils.helpers:validate_pykwalify
      extra_kwargs:
        schema:
          type: map
          mapping:
            hosts:
              type: seq
              sequence:
              - type: str
                enum:
                - x9999c0s1b0n0
            macs:
              type: seq
              range:
                max: 0
              sequence:
              - type: str
            nids:
              type: seq
              range:
                max: 0
              sequence:
              - type: int
            params:
              type: str
              enum: 
              - console=tty0
            kernel:
              type: str
              enum:
              - s3://boot-images/00000000-0000-0000-0000-000000000000/kernel
            initrd:
              type: str
              enum:
              - s3://boot-images/00000000-0000-0000-0000-000000000000/initrd
            cloud-init:
              type: map
              allowempty: true
              mapping:
                meta-data:
                  type: map
                  mapping:
                    meta-data-key:
                      type: str
                      enum:
                      - foo
                user-data:
                  type: map
                  mapping:
                    user-data-key:
                      type: str
                      enum:
                      - bar
                phone-home:
                  type: map
                  mapping:
                    pub_key_dsa:
                      type: str
                      enum:
                      - "pub_key_dsa_value"
                    pub_key_rsa:
                      type: str
                      enum:
                      - "pub_key_rsa_value"
                    pub_key_ecdsa:
                      type: str
                      enum:
                      - "pub_key_ecdsa_value"
                    pub_key_ed25519:
                      type: str
                      enum:
                      - "pub_key_ed25519_value"
                    instance_id:
                      type: str
                      enum:
                      - "instance_id_value"
                    hostname:
                      type: str
                      enum:
                      - "hostname_value"
                    fqdn:
                      type: str
                      enum:
                      - "fqdn_value"

- name: Remove test HSM EthernetInterfaces for the CT Test container
  request:
    url: "{hsm_base_url}/hsm/v2/Inventory/EthernetInterfaces/0efffffffffe"
    method: DELETE
    verify: !bool "{verify}"
  response:
    status_code: 200

- name: Remove test component from HSM State Components
  request:
    url: "{hsm_base_url}/hsm/v2/State/Components/x9999c0s1b0n0"
    method: DELETE
    verify: !bool "{verify}"
  response:
    status_code: 200

