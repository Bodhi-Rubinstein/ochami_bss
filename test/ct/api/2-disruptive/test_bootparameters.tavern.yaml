# MIT License
#
# (C) Copyright [2022] Hewlett Packard Enterprise Development LP
#
# Permission is hereby granted, free of charge, to any person obtaining a
# copy of this software and associated documentation files (the "Software"),
# to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included
# in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR
# OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
# ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
# OTHER DEALINGS IN THE SOFTWARE.

# Tavern test cases for the BSS bootparameters API
# Author: Ryan Sjostrand
# Service: Boot Script Service

# HMS test metrics test cases: 24
# 1. POST /boot/v1/bootparameters API response code
# 2. GET /boot/v1/bootparameters API response code
# 3. GET /boot/v1/bootparameters API response body
# 4. DELETE /boot/v1/bootparameters Delete boot parameter by host. API response code
# 5. DELETE /boot/v1/bootparameters Delete boot parameter by kernel. API response code
# 6. DELETE /boot/v1/bootparameters Delete boot parameter by initrd. API response code
# 7. POST /boot/v1/bootparameters with xname as identifier. API response code
# 8. POST /boot/v1/bootparameters with xname as identifier. API headers
# 9. POST /boot/v1/bootparameters with duplicate xname as identifier. API response code
# 10. POST /boot/v1/bootparameters with duplicate xname as identifier. API response body
# 11. GET /boot/v1/bootparameters?host=xname API response code
# 12. GET /boot/v1/bootparameters?host=xname API response body
# 13. PUT /boot/v1/bootparameters with xname as identifier. API response code
# 14. PUT /boot/v1/bootparameters with xname as identifier. API headers
# 15. GET /boot/v1/bootparameters?host=xname Verify PUT success. API response code
# 16. GET /boot/v1/bootparameters?host=xname Verify PUT success. API response body
# 17. PATCH /boot/v1/bootparameters with xname as identifier. API response code
# 18. GET /boot/v1/bootparameters?host=xname Verify PATCH success. API response code
# 19. GET /boot/v1/bootparameters?host=xname Verify PATCH success. API response body
# 20. DELETE /boot/v1/bootparameters Delete boot parameter by host. API response code
# 21. GET /boot/v1/bootparameters?host=xname Retrieve non-existent boot parameter. API response code
# 22. GET /boot/v1/bootparameters?host=xname Retrieve non-existent boot parameter. API response body
# 23. DELETE /boot/v1/bootparameters Delete non-existent boot parameter by host. API response code
# 24. DELETE /boot/v1/bootparameters Delete non-existent boot parameter by host. API response body
---
test_name: bssAPIBootparameters

stages:
- name: Delete existing test bootparameters if it exists
  request:
    url: "{bss_base_url}/boot/v1/bootparameters"
    method: DELETE
    verify: !bool "{verify}"
    json:
      hosts:
      - x9999c0s1b0n0

# 1. POST /boot/v1/bootparameters API response code
- name: Create Bootparameter with xname
  request:
    url: "{bss_base_url}/boot/v1/bootparameters"
    method: POST
    verify: !bool "{verify}"
    json:
      hosts:
      - x9999c0s1b0n0
      params: console=tty0
      kernel: s3://boot-images/00000000-0000-0000-0000-000000000000/kernel
      initrd: s3://boot-images/00000000-0000-0000-0000-000000000000/initrd
  response:
    status_code: 201

# 2. GET /boot/v1/bootparameters API response code
# 3. GET /boot/v1/bootparameters API response body
- name: Ensure that the BSS bootparameters can be retrieved
  request:
    url: "{bss_base_url}/boot/v1/bootparameters"
    method: GET
    verify: !bool "{verify}"
  response:
    status_code: 200
    verify_response_with:
      function: tavern.testutils.helpers:validate_pykwalify
      extra_kwargs:
        schema:
          type: seq
          matching: all
          sequence:
          - type: map
            mapping:
              hosts:
                type: seq
                sequence:
                - type: str
              macs:
                type: seq
                sequence:
                - type: str
              nids:
                type: seq
                sequence:
                - type: int
              params:
                type: str
              kernel:
                type: str
              initrd:
                type: str
              cloud-init:
                type: map
                allowempty: true
                # TODO figure out
                # mapping:
                #   meta-data:
                #     type: none
                #     # type: map
                #     # allowempty: True
                #     # # - type: none
                #   user-data:
                #     type: "none"
                #     # type: map
                #     # allowempty: True
                #   phone-home:
                #     type: map
                #     mapping:
                #       pub_key_dsa:
                #         type: str
                #       pub_key_rsa:
                #         type: str
                #       pub_key_ecdsa:
                #         type: str
                #       pub_key_ed25519:
                #         type: str
                #       instance_id:
                #         type: str
                #       hostname:
                #         type: str
                #       fqdn:
                #         type: str

# 4. DELETE /boot/v1/bootparameters Delete boot parameter by host. API response code
- name: Delete testing bootparameters by xname
  request:
    url: "{bss_base_url}/boot/v1/bootparameters"
    method: DELETE
    verify: !bool "{verify}"
    json:
      hosts:
      - x9999c0s1b0n0
  response:
    status_code: 200  

# 5. DELETE /boot/v1/bootparameters Delete boot parameter by kernel. API response code
- name: Delete testing bootparameters by kernel
  request:
    url: "{bss_base_url}/boot/v1/bootparameters"
    method: DELETE
    verify: !bool "{verify}"
    json:
      kernel: s3://boot-images/00000000-0000-0000-0000-000000000000/kernel
  response:
    status_code: 200  

# 6. DELETE /boot/v1/bootparameters Delete boot parameter by initrd. API response code
- name: Delete testing bootparameters by initrd
  request:
    url: "{bss_base_url}/boot/v1/bootparameters"
    method: DELETE
    verify: !bool "{verify}"
    json:
      initrd: s3://boot-images/00000000-0000-0000-0000-000000000000/initrd
  response:
    status_code: 200  

---
test_name: bssAPIBootparameterXnameAsIdentifier

stages:
- name: Delete existing test bootparameters if it exists
  request:
    url: "{bss_base_url}/boot/v1/bootparameters"
    method: DELETE
    verify: !bool "{verify}"
    json:
      hosts:
      - x9999c0s1b0n0

# 7. POST /boot/v1/bootparameters with xname as identifier. API response code
# 8. POST /boot/v1/bootparameters with xname as identifier. API headers
- name: Create Bootparameteters with xname specified as identifier
  request:
    url: "{bss_base_url}/boot/v1/bootparameters"
    method: POST
    verify: !bool "{verify}"
    json:
      hosts:
      - x9999c0s1b0n0
      params: console=tty0
      kernel: s3://boot-images/00000000-0000-0000-0000-000000000000/kernel
      initrd: s3://boot-images/00000000-0000-0000-0000-000000000000/initrd
  response:
    status_code: 201
    headers:
      BSS-Referral-Token: !anystr

# 9. POST /boot/v1/bootparameters with duplicate xname as identifier. API response code
# 10. POST /boot/v1/bootparameters with duplicate xname as identifier. API response body
- name: Create duplicate Bootparameteters with xname specified as identifier
  request:
    url: "{bss_base_url}/boot/v1/bootparameters"
    method: POST
    verify: !bool "{verify}"
    json:
      hosts:
      - x9999c0s1b0n0
      params: console=tty0
      kernel: s3://boot-images/00000000-0000-0000-0000-000000000000/kernel
      initrd: s3://boot-images/00000000-0000-0000-0000-000000000000/initrd
  response:
    status_code: 400
    verify_response_with:
      function: tavern.testutils.helpers:validate_pykwalify
      extra_kwargs:
        schema:
          type: map
          required: True
          mapping:
            type:
              type: str
              required: True
            title:
              type: str
              required: True
            detail:
              type: str
              required: False
            instance:
              type: str
              required: False
            status:
              type: int
              required: False

# 11. GET /boot/v1/bootparameters?host=xname API response code
# 12. GET /boot/v1/bootparameters?host=xname API response body
- name: Retrieve created Bootparameteters with xname specified as identifier
  request:
    url: "{bss_base_url}/boot/v1/bootparameters?name=x9999c0s1b0n0"
    method: GET
    verify: !bool "{verify}"
  response:
    status_code: 200
    verify_response_with:
      function: tavern.testutils.helpers:validate_pykwalify
      extra_kwargs:
        schema:
          type: seq
          range:
            max: 1
          matching: all
          sequence:
          - type: map
            mapping:
              hosts:
                type: seq
                sequence:
                - type: str
                  enum:
                  - x9999c0s1b0n0
              macs:
                type: seq
                range:
                  max: 0
                sequence:
                - type: str
              nids:
                type: seq
                range:
                  max: 0
                sequence:
                - type: int
              params:
                type: str
                enum: 
                - console=tty0
              kernel:
                type: str
                enum:
                - s3://boot-images/00000000-0000-0000-0000-000000000000/kernel
              initrd:
                type: str
                enum:
                - s3://boot-images/00000000-0000-0000-0000-000000000000/initrd
              cloud-init:
                type: map
                allowempty: true
                mapping:
                  meta-data:
                    type: none
                  user-data:
                    type: none
                  phone-home:
                    type: map
                    mapping:
                      pub_key_dsa:
                        type: str
                        enum:
                        - ""
                      pub_key_rsa:
                        type: str
                        enum:
                        - ""
                      pub_key_ecdsa:
                        type: str
                        enum:
                        - ""
                      pub_key_ed25519:
                        type: str
                        enum:
                        - ""
                      instance_id:
                        type: str
                        enum:
                        - ""
                      hostname:
                        type: str
                        enum:
                        - ""
                      fqdn:
                        type: str
                        enum:
                        - ""

# 13. PUT /boot/v1/bootparameters with xname as identifier. API response code
# 14. PUT /boot/v1/bootparameters with xname as identifier. API headers
- name: Replace Bootparameteters with xname specified as identifier
  request:
    url: "{bss_base_url}/boot/v1/bootparameters"
    method: PUT
    verify: !bool "{verify}"
    json:
      hosts:
      - x9999c0s1b0n0
      params: console=tty0 console=ttyS0,115200
      kernel: s3://boot-images/00000000-0000-0000-0000-000000000001/kernel
      initrd: s3://boot-images/00000000-0000-0000-0000-000000000001/initrd
  response:
    status_code: 200
    headers:
      BSS-Referral-Token: !anystr

# 15. GET /boot/v1/bootparameters?host=xname Verify PUT success. API response code
# 16. GET /boot/v1/bootparameters?host=xname Verify PUT success. API response body
- name: Retrieve replaced Bootparameteters with xname specified as identifier
  request:
    url: "{bss_base_url}/boot/v1/bootparameters?name=x9999c0s1b0n0"
    method: GET
    verify: !bool "{verify}"
  response:
    status_code: 200
    verify_response_with:
      function: tavern.testutils.helpers:validate_pykwalify
      extra_kwargs:
        schema:
          type: seq
          range:
            max: 1
          matching: all
          sequence:
          - type: map
            mapping:
              hosts:
                type: seq
                sequence:
                - type: str
                  enum:
                  - x9999c0s1b0n0
              macs:
                type: seq
                range:
                  max: 0
                sequence:
                - type: str
              nids:
                type: seq
                range:
                  max: 0
                sequence:
                - type: int
              params:
                type: str
                enum: 
                - console=tty0 console=ttyS0,115200
              kernel:
                type: str
                enum:
                - s3://boot-images/00000000-0000-0000-0000-000000000001/kernel
              initrd:
                type: str
                enum:
                - s3://boot-images/00000000-0000-0000-0000-000000000001/initrd
              cloud-init:
                type: map
                allowempty: true
                mapping:
                  meta-data:
                    type: none
                  user-data:
                    type: none
                  phone-home:
                    type: map
                    mapping:
                      pub_key_dsa:
                        type: str
                        enum:
                        - ""
                      pub_key_rsa:
                        type: str
                        enum:
                        - ""
                      pub_key_ecdsa:
                        type: str
                        enum:
                        - ""
                      pub_key_ed25519:
                        type: str
                        enum:
                        - ""
                      instance_id:
                        type: str
                        enum:
                        - ""
                      hostname:
                        type: str
                        enum:
                        - ""
                      fqdn:
                        type: str
                        enum:
                        - ""

# 17. PATCH /boot/v1/bootparameters with xname as identifier. API response code
- name: Update Bootparameteters with xname specified as identifier
  request:
    url: "{bss_base_url}/boot/v1/bootparameters"
    method: PATCH
    verify: !bool "{verify}"
    json:
      hosts:
      - x9999c0s1b0n0
      kernel: s3://boot-images/00000000-0000-0000-0000-000000000002/kernel
      initrd: s3://boot-images/00000000-0000-0000-0000-000000000002/initrd
  response:
    status_code: 200

# 18. GET /boot/v1/bootparameters?host=xname Verify PATCH success. API response code
# 19. GET /boot/v1/bootparameters?host=xname Verify PATCH success. API response body
- name: Retrieve replaced Bootparameteters with xname specified as identifier
  request:
    url: "{bss_base_url}/boot/v1/bootparameters?name=x9999c0s1b0n0"
    method: GET
    verify: !bool "{verify}"
  response:
    status_code: 200
    verify_response_with:
      function: tavern.testutils.helpers:validate_pykwalify
      extra_kwargs:
        schema:
          type: seq
          range:
            max: 1
          matching: all
          sequence:
          - type: map
            mapping:
              hosts:
                type: seq
                sequence:
                - type: str
                  enum:
                  - x9999c0s1b0n0
              macs:
                type: seq
                range:
                  max: 0
                sequence:
                - type: str
              nids:
                type: seq
                range:
                  max: 0
                sequence:
                - type: int
              params:
                type: str
                enum: 
                - console=tty0 console=ttyS0,115200
              kernel:
                type: str
                enum:
                - s3://boot-images/00000000-0000-0000-0000-000000000002/kernel
              initrd:
                type: str
                enum:
                - s3://boot-images/00000000-0000-0000-0000-000000000002/initrd
              cloud-init:
                type: map
                allowempty: true
                mapping:
                  meta-data:
                    type: none
                  user-data:
                    type: none
                  phone-home:
                    type: map
                    mapping:
                      pub_key_dsa:
                        type: str
                        enum:
                        - ""
                      pub_key_rsa:
                        type: str
                        enum:
                        - ""
                      pub_key_ecdsa:
                        type: str
                        enum:
                        - ""
                      pub_key_ed25519:
                        type: str
                        enum:
                        - ""
                      instance_id:
                        type: str
                        enum:
                        - ""
                      hostname:
                        type: str
                        enum:
                        - ""
                      fqdn:
                        type: str
                        enum:
                        - ""

# 20. DELETE /boot/v1/bootparameters Delete boot parameter by host. API response code
- name: Delete Bootparameters with xname as host
  request:
    url: "{bss_base_url}/boot/v1/bootparameters"
    method: DELETE
    verify: !bool "{verify}"
    json:
      hosts:
      - x9999c0s1b0n0
  response:
    status_code: 200

# 21. GET /boot/v1/bootparameters?host=xname Retrieve non-existent boot parameter. API response code
# 22. GET /boot/v1/bootparameters?host=xname Retrieve non-existent boot parameter. API response body
- name: Retrieve deleted Bootparameteters with xname specified as identifier
  request:
    url: "{bss_base_url}/boot/v1/bootparameters?name=x9999c0s1b0n0"
    method: GET
    verify: !bool "{verify}"
  response:
    status_code: 404
    verify_response_with:
      function: tavern.testutils.helpers:validate_pykwalify
      extra_kwargs:
        schema:
          type: map
          required: True
          mapping:
            type:
              type: str
              required: True
            title:
              type: str
              required: True
            detail:
              type: str
              required: False
            instance:
              type: str
              required: False
            status:
              type: int
              required: False

# 23. DELETE /boot/v1/bootparameters Delete non-existent boot parameter by host. API response code
# 24. DELETE /boot/v1/bootparameters Delete non-existent boot parameter by host. API response body
- name: Delete Bootparameters with xname as host
  request:
    url: "{bss_base_url}/boot/v1/bootparameters"
    method: DELETE
    verify: !bool "{verify}"
    json:
      hosts:
      - x9999c0s1b0n0
  response:
    status_code: 400
    verify_response_with:
      function: tavern.testutils.helpers:validate_pykwalify
      extra_kwargs:
        schema:
          type: map
          required: True
          mapping:
            type:
              type: str
              required: True
            title:
              type: str
              required: True
            detail:
              type: str
              required: False
            instance:
              type: str
              required: False
            status:
              type: int
              required: False
