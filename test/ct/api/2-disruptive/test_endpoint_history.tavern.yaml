# MIT License
#
# (C) Copyright [2022] Hewlett Packard Enterprise Development LP
#
# Permission is hereby granted, free of charge, to any person obtaining a
# copy of this software and associated documentation files (the "Software"),
# to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included
# in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR
# OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
# ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
# OTHER DEALINGS IN THE SOFTWARE.

# Tavern test cases for BSS endpoint history API
# Author: Ryan Sjostrand
# Service: Boot Script Service

---
test_name: bssAPIendpointHistory

stages:
- name: Perform GET against /endpoint-history
  request:
    url: "{bss_base_url}/boot/v1/endpoint-history"
    method: GET
    verify: !bool "{verify}"
  response:
    status_code: 200
    verify_response_with:
      function: tavern.testutils.helpers:validate_pykwalify
      extra_kwargs:
        schema:
          type: seq
          matching: all
          sequence:
          - type: map
            mapping:
              name:
                type: str
              endpoint:
                type: str
                enum:
                - bootscript
                - user-data
              last_epoch:
                type: int

- name: Perform GET against /endpoint-history with name
  request:
    url: "{bss_base_url}/boot/v1/endpoint-history"
    method: GET
    verify: !bool "{verify}"
    params:
      name: x9999c0s1b0n0
  response:
    status_code: 200
    verify_response_with:
      function: tavern.testutils.helpers:validate_pykwalify
      extra_kwargs:
        schema:
          type: seq
          matching: all
          sequence:
          - type: map
            mapping:
              name:
                type: str
              endpoint:
                type: str
                enum:
                - bootscript
                - user-data
              last_epoch:
                type: int

# DISABLED CASMHMS-5814 BSS Endpoint History returns 500 status code when specifying only endpoint query parameter.
# - name: Perform GET against /endpoint-history with endpoint bootscript
#   request:
#     url: "{bss_base_url}/boot/v1/endpoint-history"
#     method: GET
#     verify: !bool "{verify}"
#     params:
#       endpoint: bootscript
#   response:
#     status_code: 400
#     verify_response_with:
#       function: tavern.testutils.helpers:validate_pykwalify
#       extra_kwargs:
#         schema:
#           type: seq
#           matching: all
#           sequence:
#           - type: map
#             mapping:
#               name:
#                 type: str
#               endpoint:
#                 type: str
#                 enum:
#                 - bootscript
#                 - user-data
#               last_epoch:
#                 type: int

# DISABLED CASMHMS-5814 BSS Endpoint History returns 500 status code when specifying only endpoint query parameter.
# - name: Perform GET against /endpoint-history with endpoint user-data
#   request:
#     url: "{bss_base_url}/boot/v1/endpoint-history"
#     method: GET
#     verify: !bool "{verify}"
#     params:
#       endpoint: user-data
#   response:
#     status_code: 400
#     verify_response_with:
#       function: tavern.testutils.helpers:validate_pykwalify
#       extra_kwargs:
#         schema:
#           type: seq
#           matching: all
#           sequence:
#           - type: map
#             mapping:
#               name:
#                 type: str
#               endpoint:
#                 type: str
#                 enum:
#                 - bootscript
#                 - user-data
#               last_epoch:
#                 type: int

- name: Perform GET against /endpoint-history with both name and endpoint 
  request:
    url: "{bss_base_url}/boot/v1/endpoint-history"
    method: GET
    verify: !bool "{verify}"
    params:
      name: x9999c0s1b0n0
      endpoint: user-data
  response:
    status_code: 200
    verify_response_with:
      function: tavern.testutils.helpers:validate_pykwalify
      extra_kwargs:
        schema:
          type: seq
          matching: all
          sequence:
          - type: map
            mapping:
              name:
                type: str
              endpoint:
                type: str
                enum:
                - bootscript
                - user-data
              last_epoch:
                type: int
