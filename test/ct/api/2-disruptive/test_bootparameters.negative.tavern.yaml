---

# POST /bootparamters not json

# POST /bootparamters missing required data

# POST in a invalid MAC address, if not allowed update swagger, otherwise open a ticket
# - Allowed by BSS
# POST in a invalid NID (negative), if not allowed update swagger, otherwise open a ticket
# - Negative NID is allowed, but BSS only creates the kernel/initrd entries.

# Empty JSON {} - they all response with 200, but don't do anything
#  POST
#  PATCH
#  PUT
#  DELETE

# Perform a delete to trigger a 404, if unable update swagger file
# - Cannot be done, as the code can never trigger 1 404. If a delete is issued on something that does not exist, it just returns a 404

# Try to create a empty boot parameter

# Invalid json
#  POST
#  PATCH
#  PUT
#  DELETE

# PATCH with {"kernel": "foo21"} does a creation
# PATCH with {"nids": [12], "kernel": "foo212"} does a creation of the kernel, but no error about the non-existent NID

# PUT will create if not exists

# Seems like delete can do a partial delete, like if the kernel exists it will delete it, but if the nid doesn't exist it will report that one 
# as not found
# - Also unknown MAC addresses don't trigger a 404 or 400 bad request.

# TODO verify DELETE status codes match swagger

test_name: bssAPIBootparametersBadData

stages:
- name: bssAPIBootparametersPOSTBadData
  request:
    url: "{bss_base_url}/boot/v1/bootparameters"
    method: POST
    verify: !bool "{verify}"
    data: "This is not json"
  response:
    status_code: 400
    verify_response_with:
      function: tavern.testutils.helpers:validate_pykwalify
      extra_kwargs:
        schema:
          type: map
          required: True
          mapping:
            type:
              type: str
              required: True
            title:
              type: str
              required: True
            detail:
              type: str
              required: False
            instance:
              type: str
              required: False
            status:
              type: int
              required: False

- name: bssAPIBootparametersPATCHBadData
  request:
    url: "{bss_base_url}/boot/v1/bootparameters"
    method: PATCH
    verify: !bool "{verify}"
    data: "This is not json"
  response:
    status_code: 400
    verify_response_with:
      function: tavern.testutils.helpers:validate_pykwalify
      extra_kwargs:
        schema:
          type: map
          required: True
          mapping:
            type:
              type: str
              required: True
            title:
              type: str
              required: True
            detail:
              type: str
              required: False
            instance:
              type: str
              required: False
            status:
              type: int
              required: False

- name: bssAPIBootparametersPUTBadData
  request:
    url: "{bss_base_url}/boot/v1/bootparameters"
    method: PUT
    verify: !bool "{verify}"
    data: "This is not json"
  response:
    status_code: 400
    verify_response_with:
      function: tavern.testutils.helpers:validate_pykwalify
      extra_kwargs:
        schema:
          type: map
          required: True
          mapping:
            type:
              type: str
              required: True
            title:
              type: str
              required: True
            detail:
              type: str
              required: False
            instance:
              type: str
              required: False
            status:
              type: int
              required: False
- name: bssAPIBootparametersDELETEBadData
  request:
    url: "{bss_base_url}/boot/v1/bootparameters"
    method: DELETE
    verify: !bool "{verify}"
    data: "This is not json"
  response:
    status_code: 400
    verify_response_with:
      function: tavern.testutils.helpers:validate_pykwalify
      extra_kwargs:
        schema:
          type: map
          required: True
          mapping:
            type:
              type: str
              required: True
            title:
              type: str
              required: True
            detail:
              type: str
              required: False
            instance:
              type: str
              required: False
            status:
              type: int
              required: False

- name: Search BSS bootparamters with invalid NID
  request:
    url: "{bss_base_url}/boot/v1/bootparameters"
    method: GET
    verify: !bool "{verify}"
    params:
      nid: 1notANid
  response:
    status_code: 400
    verify_response_with:
      function: tavern.testutils.helpers:validate_pykwalify
      extra_kwargs:
        schema:
          type: map
          required: True
          mapping:
            type:
              type: str
              required: True
            title:
              type: str
              required: True
            detail:
              type: str
              required: False
            instance:
              type: str
              required: False
            status:
              type: int
              required: False

---

test_name: bssAPIBootparametersNonExistent
stages:
- name: bssAPIBootparametersPATCHNonExistent
  request:
    url: "{bss_base_url}/boot/v1/bootparameters"
    method: PATCH
    verify: !bool "{verify}"
    json:
      hosts:
      - x9999c0s2b0n0
  response:
    status_code: 404
    verify_response_with:
      function: tavern.testutils.helpers:validate_pykwalify
      extra_kwargs:
        schema:
          type: map
          required: True
          mapping:
            type:
              type: str
              required: True
            title:
              type: str
              required: True
            detail:
              type: str
              required: False
            instance:
              type: str
              required: False
            status:
              type: int
              required: False
- name: bssAPIBootparametersDELETENonExistentHost
  request:
    url: "{bss_base_url}/boot/v1/bootparameters"
    method: DELETE
    verify: !bool "{verify}"
    json:
      hosts:
      - x9999c0s2b0n0
  response:
    status_code: 400
    verify_response_with:
      function: tavern.testutils.helpers:validate_pykwalify
      extra_kwargs:
        schema:
          type: map
          required: True
          mapping:
            type:
              type: str
              required: True
            title:
              type: str
              required: True
            detail:
              type: str
              required: False
            instance:
              type: str
              required: False
            status:
              type: int
              required: False

- name: bssAPIBootparametersDELETENonExistentNID
  request:
    url: "{bss_base_url}/boot/v1/bootparameters"
    method: DELETE
    verify: !bool "{verify}"
    json:
      hosts:
      - x9999c0s2b0n0
  response:
    status_code: 400
    verify_response_with:
      function: tavern.testutils.helpers:validate_pykwalify
      extra_kwargs:
        schema:
          type: map
          required: True
          mapping:
            type:
              type: str
              required: True
            title:
              type: str
              required: True
            detail:
              type: str
              required: False
            instance:
              type: str
              required: False
            status:
              type: int
              required: False
- name: bssAPIBootparametersGETNonExistentHost
  request:
    url: "{bss_base_url}/boot/v1/bootparameters"
    method: GET
    verify: !bool "{verify}"
    params:
      nid: 2147483647
  response:
    status_code: 404
    verify_response_with:
      function: tavern.testutils.helpers:validate_pykwalify
      extra_kwargs:
        schema:
          type: map
          required: True
          mapping:
            type:
              type: str
              required: True
            title:
              type: str
              required: True
            detail:
              type: str
              required: False
            instance:
              type: str
              required: False
            status:
              type: int
              required: False

- name: bssAPIBootparametersGETNonExistentNID
  request:
    url: "{bss_base_url}/boot/v1/bootparameters"
    method: GET
    verify: !bool "{verify}"
    params:
      nid: 2147483647
  response:
    status_code: 404
    verify_response_with:
      function: tavern.testutils.helpers:validate_pykwalify
      extra_kwargs:
        schema:
          type: map
          required: True
          mapping:
            type:
              type: str
              required: True
            title:
              type: str
              required: True
            detail:
              type: str
              required: False
            instance:
              type: str
              required: False
            status:
              type: int
              required: False

- name: bssAPIBootparametersGETNonExistentMAC
  request:
    url: "{bss_base_url}/boot/v1/bootparameters"
    method: GET
    verify: !bool "{verify}"
    params:
      mac: 0e:ff:ff:ff:ff:ff
  response:
    status_code: 404
    verify_response_with:
      function: tavern.testutils.helpers:validate_pykwalify
      extra_kwargs:
        schema:
          type: map
          required: True
          mapping:
            type:
              type: str
              required: True
            title:
              type: str
              required: True
            detail:
              type: str
              required: False
            instance:
              type: str
              required: False
            status:
              type: int
              required: False
